# -*- Python -*-

import os
import sys
import re
import platform

try:
   import lit.util
   import lit.formats
except ImportError:
   pass


config.name = 'Seahorn'
config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = ['.c', '.ll', 'sh']

config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')
config.useProgressBar= True
config.timeout=500
config.max_time=500

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]
   else:
      lit_config.fatal('environment variable %s is not set' % name)

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which (cmd):
   return lit.util.which(cmd, config.environment['PATH'])

def getSea ():
   sea = None
   if 'SEAHORN' in os.environ:
      sea = os.environ ['SEAHORN']
   if sea is None or not isexec(sea):
      sea = which('sea')
   return sea

addEnv('HOME')
addEnv('PWD')

repositoryRoot = os.path.dirname (os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
lit_config.note('Repository root is {}'.format(repositoryRoot))

sea_cmd = getSea()
if not isexec(sea_cmd):
   lit_config.fatal('Could not find the sea executable at {}'.format(sea_cmd))
else:
   lit_config.note('Found sea: {}'.format(sea_cmd))

kernel_dir = os.path.join(repositoryRoot, 'kernel')
drvhorn_util = os.path.join(repositoryRoot, 'drvhorn-util.c')
merge_script = os.path.join(repositoryRoot, 'scripts', 'merge-bitcodes.sh')

config.substitutions.append(('%sea', sea_cmd))
config.substitutions.append(('%drvhorn-util', drvhorn_util))
config.substitutions.append(('%kernel-dir', kernel_dir))
config.substitutions.append(('%merge', merge_script))
