diff --git a/.gitignore b/.gitignore
index 0bbae167bf93..5b4234d2c49a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -170,3 +170,6 @@ sphinx_*/
 
 # Rust analyzer configuration
 /rust-project.json
+
+*.bc
+!/kernel/time/timeconst.bc
diff --git a/Makefile b/Makefile
index 5c418efbe89b..9aba84864769 100644
--- a/Makefile
+++ b/Makefile
@@ -41,6 +41,7 @@ __all:
 this-makefile := $(lastword $(MAKEFILE_LIST))
 export abs_srctree := $(realpath $(dir $(this-makefile)))
 export abs_objtree := $(CURDIR)
+export BUILD_BC
 
 ifneq ($(sub_make_done),1)
 
@@ -488,6 +489,7 @@ OBJCOPY		= $(LLVM_PREFIX)llvm-objcopy$(LLVM_SUFFIX)
 OBJDUMP		= $(LLVM_PREFIX)llvm-objdump$(LLVM_SUFFIX)
 READELF		= $(LLVM_PREFIX)llvm-readelf$(LLVM_SUFFIX)
 STRIP		= $(LLVM_PREFIX)llvm-strip$(LLVM_SUFFIX)
+LLVMLINK  = $(LLVM_PREFIX)llvm-link$(LLVM_SUFFIX)
 else
 CC		= $(CROSS_COMPILE)gcc
 LD		= $(CROSS_COMPILE)ld
@@ -615,6 +617,7 @@ export KBUILD_AFLAGS AFLAGS_KERNEL AFLAGS_MODULE
 export KBUILD_AFLAGS_MODULE KBUILD_CFLAGS_MODULE KBUILD_RUSTFLAGS_MODULE KBUILD_LDFLAGS_MODULE
 export KBUILD_AFLAGS_KERNEL KBUILD_CFLAGS_KERNEL KBUILD_RUSTFLAGS_KERNEL
 export PAHOLE_FLAGS
+export LLVMLINK
 
 # Files to ignore in find ... statements
 
@@ -704,7 +707,9 @@ else #!config-build
 # If building an external module we do not care about the all: rule
 # but instead __all depend on modules
 PHONY += all
-ifeq ($(KBUILD_EXTMOD),)
+ifeq ($(BUILD_BC),1)
+__all: vmlinux.bc
+else ifeq ($(KBUILD_EXTMOD),)
 __all: all
 else
 __all: modules
@@ -1141,6 +1146,19 @@ targets += vmlinux.a
 vmlinux.a: $(KBUILD_VMLINUX_OBJS) scripts/head-object-list.txt FORCE
 	$(call if_changed,ar_vmlinux.a)
 
+ifeq ($(BUILD_BC),1)
+KBUILD_VMLINUX_OBJS := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(KBUILD_VMLINUX_OBJS)))
+KBUILD_VMLINUX_LIBS := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(KBUILD_VMLINUX_LIBS)))
+quiet_cmd_link_vmlinux.bc = AR      $@
+      cmd_link_vmlinux.bc = \
+	rm -f $@; \
+	$(LLVMLINK) -o $@ $(KBUILD_VMLINUX_OBJS) $(KBUILD_VMLINUX_LIBS)
+
+targets += vmlinux.bc
+vmlinux.bc: $(KBUILD_VMLINUX_OBJS) $(KBUILD_VMLINUX_LIBS) FORCE
+	$(call if_changed,link_vmlinux.bc)
+endif
+
 PHONY += vmlinux_o
 vmlinux_o: vmlinux.a $(KBUILD_VMLINUX_LIBS)
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.vmlinux_o
@@ -1933,6 +1951,7 @@ clean: $(clean-dirs)
 		-o -name '*.symtypes' -o -name 'modules.order' \
 		-o -name '*.c.[012]*.*' \
 		-o -name '*.ll' \
+		-o -name '*.bc' ! -name 'timeconst.bc' \
 		-o -name '*.gcno' \
 		-o -name '*.*.symversions' \) -type f -print \
 		-o -name '.tmp_*' -print \
diff --git a/arch/x86/lib/Makefile b/arch/x86/lib/Makefile
index ea3a28e7b613..2c69eac5f69f 100644
--- a/arch/x86/lib/Makefile
+++ b/arch/x86/lib/Makefile
@@ -36,6 +36,7 @@ $(obj)/inat-tables.c: $(inat_tables_script) $(inat_tables_maps)
 	$(call cmd,inat_tables)
 
 $(obj)/inat.o: $(obj)/inat-tables.c
+$(obj)/inat.bc: $(obj)/inat-tables.c
 
 clean-files := inat-tables.c
 
diff --git a/certs/Makefile b/certs/Makefile
index 799ad7b9e68a..31b77c9cee72 100644
--- a/certs/Makefile
+++ b/certs/Makefile
@@ -8,6 +8,7 @@ obj-$(CONFIG_SYSTEM_BLACKLIST_KEYRING) += blacklist.o blacklist_hashes.o
 obj-$(CONFIG_SYSTEM_REVOCATION_LIST) += revocation_certificates.o
 
 $(obj)/blacklist_hashes.o: $(obj)/blacklist_hash_list
+$(obj)/blacklist_hashes.bc: $(obj)/blacklist_hash_list
 CFLAGS_blacklist_hashes.o := -I $(obj)
 
 quiet_cmd_check_and_copy_blacklist_hash_list = GEN     $@
@@ -27,6 +28,7 @@ quiet_cmd_extract_certs  = CERT    $@
 extract-cert-in = $(filter-out $(obj)/extract-cert, $(real-prereqs))
 
 $(obj)/system_certificates.o: $(obj)/x509_certificate_list
+$(obj)/system_certificates.bc: $(obj)/x509_certificate_list
 
 $(obj)/x509_certificate_list: $(CONFIG_SYSTEM_TRUSTED_KEYS) $(obj)/extract-cert FORCE
 	$(call if_changed,extract_certs)
@@ -64,6 +66,7 @@ $(obj)/x509.genkey:
 endif # CONFIG_MODULE_SIG_KEY
 
 $(obj)/system_certificates.o: $(obj)/signing_key.x509
+$(obj)/system_certificates.bc: $(obj)/signing_key.x509
 
 PKCS11_URI := $(filter pkcs11:%, $(CONFIG_MODULE_SIG_KEY))
 ifdef PKCS11_URI
@@ -76,6 +79,7 @@ $(obj)/signing_key.x509: $(filter-out $(PKCS11_URI),$(CONFIG_MODULE_SIG_KEY)) $(
 targets += signing_key.x509
 
 $(obj)/revocation_certificates.o: $(obj)/x509_revocation_list
+$(obj)/revocation_certificates.bc: $(obj)/x509_revocation_list
 
 $(obj)/x509_revocation_list: $(CONFIG_SYSTEM_REVOCATION_KEYS) $(obj)/extract-cert FORCE
 	$(call if_changed,extract_certs)
diff --git a/crypto/Makefile b/crypto/Makefile
index 953a7e105e58..d3e186ff5221 100644
--- a/crypto/Makefile
+++ b/crypto/Makefile
@@ -35,6 +35,9 @@ obj-$(CONFIG_CRYPTO_DH) += dh_generic.o
 $(obj)/rsapubkey.asn1.o: $(obj)/rsapubkey.asn1.c $(obj)/rsapubkey.asn1.h
 $(obj)/rsaprivkey.asn1.o: $(obj)/rsaprivkey.asn1.c $(obj)/rsaprivkey.asn1.h
 $(obj)/rsa_helper.o: $(obj)/rsapubkey.asn1.h $(obj)/rsaprivkey.asn1.h
+$(obj)/rsapubkey.asn1.bc: $(obj)/rsapubkey.asn1.c $(obj)/rsapubkey.asn1.h
+$(obj)/rsaprivkey.asn1.bc: $(obj)/rsaprivkey.asn1.c $(obj)/rsaprivkey.asn1.h
+$(obj)/rsa_helper.bc: $(obj)/rsapubkey.asn1.h $(obj)/rsaprivkey.asn1.h
 
 rsa_generic-y := rsapubkey.asn1.o
 rsa_generic-y += rsaprivkey.asn1.o
@@ -45,6 +48,8 @@ obj-$(CONFIG_CRYPTO_RSA) += rsa_generic.o
 
 $(obj)/sm2signature.asn1.o: $(obj)/sm2signature.asn1.c $(obj)/sm2signature.asn1.h
 $(obj)/sm2.o: $(obj)/sm2signature.asn1.h
+$(obj)/sm2signature.asn1.bc: $(obj)/sm2signature.asn1.c $(obj)/sm2signature.asn1.h
+$(obj)/sm2.bc: $(obj)/sm2signature.asn1.h
 
 sm2_generic-y += sm2signature.asn1.o
 sm2_generic-y += sm2.o
@@ -53,6 +58,8 @@ obj-$(CONFIG_CRYPTO_SM2) += sm2_generic.o
 
 $(obj)/ecdsasignature.asn1.o: $(obj)/ecdsasignature.asn1.c $(obj)/ecdsasignature.asn1.h
 $(obj)/ecdsa.o: $(obj)/ecdsasignature.asn1.h
+$(obj)/ecdsasignature.asn1.bc: $(obj)/ecdsasignature.asn1.c $(obj)/ecdsasignature.asn1.h
+$(obj)/ecdsa.bc: $(obj)/ecdsasignature.asn1.h
 ecdsa_generic-y += ecdsa.o
 ecdsa_generic-y += ecdsasignature.asn1.o
 obj-$(CONFIG_CRYPTO_ECDSA) += ecdsa_generic.o
@@ -194,6 +201,9 @@ obj-$(CONFIG_CRYPTO_ECDH) += ecdh_generic.o
 $(obj)/ecrdsa_params.asn1.o: $(obj)/ecrdsa_params.asn1.c $(obj)/ecrdsa_params.asn1.h
 $(obj)/ecrdsa_pub_key.asn1.o: $(obj)/ecrdsa_pub_key.asn1.c $(obj)/ecrdsa_pub_key.asn1.h
 $(obj)/ecrdsa.o: $(obj)/ecrdsa_params.asn1.h $(obj)/ecrdsa_pub_key.asn1.h
+$(obj)/ecrdsa_params.asn1.bc: $(obj)/ecrdsa_params.asn1.c $(obj)/ecrdsa_params.asn1.h
+$(obj)/ecrdsa_pub_key.asn1.bc: $(obj)/ecrdsa_pub_key.asn1.c $(obj)/ecrdsa_pub_key.asn1.h
+$(obj)/ecrdsa.bc: $(obj)/ecrdsa_params.asn1.h $(obj)/ecrdsa_pub_key.asn1.h
 ecrdsa_generic-y += ecrdsa.o
 ecrdsa_generic-y += ecrdsa_params.asn1.o
 ecrdsa_generic-y += ecrdsa_pub_key.asn1.o
diff --git a/drivers/accessibility/speakup/Makefile b/drivers/accessibility/speakup/Makefile
index 6f6a83565c0d..066858b6496f 100644
--- a/drivers/accessibility/speakup/Makefile
+++ b/drivers/accessibility/speakup/Makefile
@@ -52,6 +52,7 @@ $(obj)/mapdata.h: $(obj)/makemapdata
 hostprogs += genmap
 genmap-objs := genmap.o
 $(obj)/genmap.o: $(obj)/mapdata.h
+$(obj)/genmap.bc: $(obj)/mapdata.h
 
 quiet_cmd_genmap = GENMAP  $@
       cmd_genmap = $(obj)/genmap $< > $@
@@ -60,3 +61,4 @@ $(obj)/speakupmap.h: $(src)/speakupmap.map $(obj)/genmap
 	$(call cmd,genmap)
 
 $(obj)/main.o: $(obj)/speakupmap.h
+$(obj)/main.bc: $(obj)/speakupmap.h
diff --git a/drivers/eisa/Makefile b/drivers/eisa/Makefile
index a1dd0eaec2d4..f7c66bcefb58 100644
--- a/drivers/eisa/Makefile
+++ b/drivers/eisa/Makefile
@@ -13,6 +13,7 @@ obj-${CONFIG_EISA_VIRTUAL_ROOT} += virtual_root.o
 DEVICE_NAME_SIZE = 50
 
 $(obj)/eisa-bus.o: $(obj)/devlist.h
+$(obj)/eisa-bus.bc: $(obj)/devlist.h
 
 quiet_cmd_eisaid = GEN     $@
       cmd_eisaid = sed -e '/^\#/D' -e 's/^\([[:alnum:]]\{7\}\) \+"\([^"]\{1,$(DEVICE_NAME_SIZE)\}\).*"/EISA_DEVINFO ("\1", "\2"),/' $< > $@
diff --git a/drivers/firmware/efi/libstub/Makefile b/drivers/firmware/efi/libstub/Makefile
index a1157c2a7170..7cecf857f6b3 100644
--- a/drivers/firmware/efi/libstub/Makefile
+++ b/drivers/firmware/efi/libstub/Makefile
@@ -82,6 +82,9 @@ lib-$(CONFIG_EFI_PARAMS_FROM_FDT) += fdt.o \
 $(obj)/lib-%.o: $(srctree)/lib/%.c FORCE
 	$(call if_changed_rule,cc_o_c)
 
+$(obj)/lib-%.bc: $(srctree)/lib/%.c FORCE
+	$(call if_changed,cc_bc_c)
+
 lib-$(CONFIG_EFI_GENERIC_STUB)	+= efi-stub.o string.o intrinsics.o systable.o \
 				   screen_info.o efi-stub-entry.o
 
@@ -161,6 +164,9 @@ STUBCOPY_RELOC-$(CONFIG_LOONGARCH)	:= R_LARCH_MARK_LA
 $(obj)/%.stub.o: $(obj)/%.o FORCE
 	$(call if_changed,stubcopy)
 
+$(obj)/%.stub.bc: $(obj)/%.bc FORCE
+	$(call if_changed,bc_copy)
+
 #
 # Strip debug sections and some other sections that may legally contain
 # absolute relocations, so that we can inspect the remaining sections for
@@ -175,3 +181,6 @@ quiet_cmd_stubcopy = STUBCPY $@
 		/bin/false;						\
 	fi;								\
 	$(OBJCOPY) $(STUBCOPY_FLAGS-y) $< $@
+
+quiet_cmd_bc_copy = STUBCPY $@
+      cmd_bc_copy = cp $< $@
diff --git a/drivers/firmware/efi/libstub/Makefile.zboot b/drivers/firmware/efi/libstub/Makefile.zboot
index 2c489627a807..fb407a0ab013 100644
--- a/drivers/firmware/efi/libstub/Makefile.zboot
+++ b/drivers/firmware/efi/libstub/Makefile.zboot
@@ -50,11 +50,23 @@ AFLAGS_zboot-header.o += -DMACHINE_TYPE=IMAGE_FILE_MACHINE_$(EFI_ZBOOT_MACH_TYPE
 $(obj)/zboot-header.o: $(srctree)/drivers/firmware/efi/libstub/zboot-header.S FORCE
 	$(call if_changed_rule,as_o_S)
 
+$(obj)/zboot-header.bc: $(srctree)/drivers/firmware/efi/libstub/zboot-header.S FORCE
+	$(call if_changed_rule,as_bc_S)
+
+ifeq ($(BUILD_BC),1)
+ZBOOT_DEPS := $(obj)/zboot-header.bc $(objtree)/drivers/firmware/efi/libstub/lib.bc
+else
 ZBOOT_DEPS := $(obj)/zboot-header.o $(objtree)/drivers/firmware/efi/libstub/lib.a
+endif
 
 LDFLAGS_vmlinuz.efi.elf := -T $(srctree)/drivers/firmware/efi/libstub/zboot.lds
+ifeq ($(BUILD_BC),1)
+$(obj)/vmlinuz.efi.elf: $(obj)/vmlinuz.bc $(ZBOOT_DEPS) FORCE
+	$(call if_changed,ld)
+else
 $(obj)/vmlinuz.efi.elf: $(obj)/vmlinuz.o $(ZBOOT_DEPS) FORCE
 	$(call if_changed,ld)
+endif
 
 OBJCOPYFLAGS_vmlinuz.efi := -O binary
 $(obj)/vmlinuz.efi: $(obj)/vmlinuz.efi.elf FORCE
diff --git a/drivers/gpu/drm/radeon/Makefile b/drivers/gpu/drm/radeon/Makefile
index a8734b7d0485..418cd481569f 100644
--- a/drivers/gpu/drm/radeon/Makefile
+++ b/drivers/gpu/drm/radeon/Makefile
@@ -13,20 +13,28 @@ $(obj)/%_reg_safe.h: $(src)/reg_srcs/% $(obj)/mkregtable FORCE
 	$(call if_changed,mkregtable)
 
 $(obj)/r100.o: $(obj)/r100_reg_safe.h $(obj)/rn50_reg_safe.h
+$(obj)/r100.bc: $(obj)/r100_reg_safe.h $(obj)/rn50_reg_safe.h
 
 $(obj)/r200.o: $(obj)/r200_reg_safe.h
+$(obj)/r200.bc: $(obj)/r200_reg_safe.h
 
 $(obj)/rv515.o: $(obj)/rv515_reg_safe.h
+$(obj)/rv515.bc: $(obj)/rv515_reg_safe.h
 
 $(obj)/r300.o: $(obj)/r300_reg_safe.h
+$(obj)/r300.bc: $(obj)/r300_reg_safe.h
 
 $(obj)/r420.o: $(obj)/r420_reg_safe.h
+$(obj)/r420.bc: $(obj)/r420_reg_safe.h
 
 $(obj)/rs600.o: $(obj)/rs600_reg_safe.h
+$(obj)/rs600.bc: $(obj)/rs600_reg_safe.h
 
 $(obj)/r600_cs.o: $(obj)/r600_reg_safe.h
+$(obj)/r600_cs.bc: $(obj)/r600_reg_safe.h
 
 $(obj)/evergreen_cs.o: $(obj)/evergreen_reg_safe.h $(obj)/cayman_reg_safe.h
+$(obj)/evergreen_cs.bc: $(obj)/evergreen_reg_safe.h $(obj)/cayman_reg_safe.h
 
 radeon-y := radeon_drv.o
 
diff --git a/drivers/misc/lkdtm/Makefile b/drivers/misc/lkdtm/Makefile
index 95ef971b5e1c..22fbed1619d0 100644
--- a/drivers/misc/lkdtm/Makefile
+++ b/drivers/misc/lkdtm/Makefile
@@ -27,3 +27,5 @@ OBJCOPYFLAGS_rodata_objcopy.o	:= \
 targets += rodata.o rodata_objcopy.o
 $(obj)/rodata_objcopy.o: $(obj)/rodata.o FORCE
 	$(call if_changed,objcopy)
+$(obj)/rodata_objcopy.bc: $(obj)/rodata.bc FORCE
+	$(call if_changed,objcopy_bc)
diff --git a/drivers/net/wan/Makefile b/drivers/net/wan/Makefile
index 5bec8fae47f8..262dcd94de88 100644
--- a/drivers/net/wan/Makefile
+++ b/drivers/net/wan/Makefile
@@ -28,6 +28,7 @@ obj-$(CONFIG_SLIC_DS26522)	+= slic_ds26522.o
 
 clean-files := wanxlfw.inc
 $(obj)/wanxl.o:	$(obj)/wanxlfw.inc
+$(obj)/wanxl.bc:	$(obj)/wanxlfw.inc
 
 CROSS_COMPILE_M68K = m68k-linux-gnu-
 
@@ -58,5 +59,10 @@ quiet_cmd_m68kas_o_S = M68KAS  $@
 
 $(obj)/wanxlfw.o: $(src)/wanxlfw.S FORCE
 	$(call if_changed_dep,m68kas_o_S)
+
+quiet_cmd_m68kas_bc_S = M68KAS  $@
+      cmd_m68kas_bc_S = echo "" > $@
+$(obj)/wanxlfw.bc: $(src)/wanxlfw.S FORCE
+	$(call if_changed_dep,m68kas_bc_S)
 endif
 targets += wanxlfw.inc wanxlfw.bin wanxlfw.o
diff --git a/drivers/scsi/Makefile b/drivers/scsi/Makefile
index f055bfd54a68..2175b760c919 100644
--- a/drivers/scsi/Makefile
+++ b/drivers/scsi/Makefile
@@ -184,9 +184,9 @@ zalon7xx-objs	:= zalon.o ncr53c8xx.o
 # Files generated that shall be removed upon make clean
 clean-files :=	53c700_d.h 53c700_u.h
 
-$(obj)/53c700.o: $(obj)/53c700_d.h
+$(obj)/53c700.bc: $(obj)/53c700_d.h
 
-$(obj)/scsi_sysfs.o: $(obj)/scsi_devinfo_tbl.c
+$(obj)/scsi_sysfs.bc: $(obj)/scsi_devinfo_tbl.c
 
 quiet_cmd_bflags = GEN     $@
 	cmd_bflags = sed -n 's/.*define *BLIST_\([A-Z0-9_]*\) *.*/BLIST_FLAG_NAME(\1),/p' $< > $@
diff --git a/drivers/scsi/aic7xxx/Makefile b/drivers/scsi/aic7xxx/Makefile
index e0188ecd85b2..63b49a0bc9a7 100644
--- a/drivers/scsi/aic7xxx/Makefile
+++ b/drivers/scsi/aic7xxx/Makefile
@@ -46,6 +46,8 @@ clean-files += aic79xx_seq.h aic79xx_reg.h aic79xx_reg_print.c
 
 $(addprefix $(obj)/,$(aic7xxx-y)): $(obj)/aic7xxx_seq.h $(obj)/aic7xxx_reg.h
 $(addprefix $(obj)/,$(aic79xx-y)): $(obj)/aic79xx_seq.h $(obj)/aic79xx_reg.h
+$(addprefix $(obj)/,$(aic7xxx-y:.o=.bc)): $(obj)/aic7xxx_seq.h $(obj)/aic7xxx_reg.h
+$(addprefix $(obj)/,$(aic79xx-y:.o=.bc)): $(obj)/aic79xx_seq.h $(obj)/aic79xx_reg.h
 
 aic7xxx-gen-$(CONFIG_AIC7XXX_BUILD_FIRMWARE)	:= $(obj)/aic7xxx_reg.h
 aic7xxx-gen-$(CONFIG_AIC7XXX_REG_PRETTY_PRINT)	+= $(obj)/aic7xxx_reg_print.c
@@ -61,6 +63,8 @@ $(obj)/aic7xxx_seq.h: $(src)/aic7xxx.seq $(src)/aic7xxx.reg $(obj)/aicasm/aicasm
 
 $(aic7xxx-gen-y): $(objtree)/$(obj)/aic7xxx_seq.h
 	@true
+$(aic7xxx-gen-y:.o=.bc): $(objtree)/$(obj)/aic7xxx_seq.h
+	@true
 else
 $(obj)/aic7xxx_reg_print.c: $(src)/aic7xxx_reg_print.c_shipped
 endif
@@ -79,6 +83,8 @@ $(obj)/aic79xx_seq.h: $(src)/aic79xx.seq $(src)/aic79xx.reg $(obj)/aicasm/aicasm
 
 $(aic79xx-gen-y): $(objtree)/$(obj)/aic79xx_seq.h
 	@true
+$(aic79xx-gen-y:.o=.bc): $(objtree)/$(obj)/aic79xx_seq.h
+	@true
 else
 $(obj)/aic79xx_reg_print.c: $(src)/aic79xx_reg_print.c_shipped
 endif
diff --git a/include/linux/kref.h b/include/linux/kref.h
index d32e21a2538c..c574fd2090dd 100644
--- a/include/linux/kref.h
+++ b/include/linux/kref.h
@@ -15,9 +15,11 @@
 
 #include <linux/spinlock.h>
 #include <linux/refcount.h>
+#include <linux/compiler_attributes.h>
 
 struct kref {
 	refcount_t refcount;
+	int dummy_field_to_prevent_type_merging;
 };
 
 #define KREF_INIT(n)	{ .refcount = REFCOUNT_INIT(n), }
@@ -26,12 +28,12 @@ struct kref {
  * kref_init - initialize object.
  * @kref: object in question.
  */
-static inline void kref_init(struct kref *kref)
+static noinline __maybe_unused void kref_init(struct kref *kref)
 {
 	refcount_set(&kref->refcount, 1);
 }
 
-static inline unsigned int kref_read(const struct kref *kref)
+static noinline __maybe_unused unsigned int kref_read(const struct kref *kref)
 {
 	return refcount_read(&kref->refcount);
 }
@@ -40,7 +42,7 @@ static inline unsigned int kref_read(const struct kref *kref)
  * kref_get - increment refcount for object.
  * @kref: object.
  */
-static inline void kref_get(struct kref *kref)
+static noinline __maybe_unused void kref_get(struct kref *kref)
 {
 	refcount_inc(&kref->refcount);
 }
@@ -59,7 +61,7 @@ static inline void kref_get(struct kref *kref)
  * memory.  Only use the return value if you want to see if the kref is now
  * gone, not present.
  */
-static inline int kref_put(struct kref *kref, void (*release)(struct kref *kref))
+static noinline __maybe_unused int kref_put(struct kref *kref, void (*release)(struct kref *kref))
 {
 	if (refcount_dec_and_test(&kref->refcount)) {
 		release(kref);
@@ -68,7 +70,7 @@ static inline int kref_put(struct kref *kref, void (*release)(struct kref *kref)
 	return 0;
 }
 
-static inline int kref_put_mutex(struct kref *kref,
+static noinline __maybe_unused int kref_put_mutex(struct kref *kref,
 				 void (*release)(struct kref *kref),
 				 struct mutex *lock)
 {
@@ -79,7 +81,7 @@ static inline int kref_put_mutex(struct kref *kref,
 	return 0;
 }
 
-static inline int kref_put_lock(struct kref *kref,
+static noinline __maybe_unused int kref_put_lock(struct kref *kref,
 				void (*release)(struct kref *kref),
 				spinlock_t *lock)
 {
@@ -106,7 +108,7 @@ static inline int kref_put_lock(struct kref *kref,
  * locking in the kref_put path can be deferred to the actual removal from
  * the lookup structure and RCU lookups become trivial.
  */
-static inline int __must_check kref_get_unless_zero(struct kref *kref)
+static noinline __maybe_unused int __must_check kref_get_unless_zero(struct kref *kref)
 {
 	return refcount_inc_not_zero(&kref->refcount);
 }
diff --git a/init/Makefile b/init/Makefile
index ec557ada3c12..00b9134aec1b 100644
--- a/init/Makefile
+++ b/init/Makefile
@@ -46,6 +46,7 @@ $(obj)/utsversion-tmp.h: FORCE
 clean-files += utsversion-tmp.h
 
 $(obj)/version.o: $(obj)/utsversion-tmp.h
+$(obj)/version.bc: $(obj)/utsversion-tmp.h
 CFLAGS_version.o := -include $(obj)/utsversion-tmp.h
 
 #
@@ -58,6 +59,7 @@ include/generated/utsversion.h: FORCE
 	$(call filechk,uts_version)
 
 $(obj)/version-timestamp.o: include/generated/utsversion.h
+$(obj)/version-timestamp.bc: include/generated/utsversion.h
 CFLAGS_version-timestamp.o := -include include/generated/utsversion.h
 KASAN_SANITIZE_version-timestamp.o := n
 GCOV_PROFILE_version-timestamp.o := n
diff --git a/kernel/Makefile b/kernel/Makefile
index 3947122d618b..85c2796088c3 100644
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -140,6 +140,7 @@ KCOV_INSTRUMENT_stackleak.o := n
 obj-$(CONFIG_SCF_TORTURE_TEST) += scftorture.o
 
 $(obj)/configs.o: $(obj)/config_data.gz
+$(obj)/configs.bc: $(obj)/config_data.gz
 
 targets += config_data config_data.gz
 $(obj)/config_data.gz: $(obj)/config_data FORCE
@@ -151,6 +152,7 @@ $(obj)/config_data: $(KCONFIG_CONFIG) FORCE
 	$(call filechk,cat)
 
 $(obj)/kheaders.o: $(obj)/kheaders_data.tar.xz
+$(obj)/kheaders.bc: $(obj)/kheaders_data.tar.xz
 
 quiet_cmd_genikh = CHK     $(obj)/kheaders_data.tar.xz
       cmd_genikh = $(CONFIG_SHELL) $(srctree)/kernel/gen_kheaders.sh $@
diff --git a/kernel/bpf/Makefile b/kernel/bpf/Makefile
index f526b7573e97..e970762756c3 100644
--- a/kernel/bpf/Makefile
+++ b/kernel/bpf/Makefile
@@ -46,3 +46,5 @@ obj-$(CONFIG_BPF_PRELOAD) += preload/
 obj-$(CONFIG_BPF_SYSCALL) += relo_core.o
 $(obj)/relo_core.o: $(srctree)/tools/lib/bpf/relo_core.c FORCE
 	$(call if_changed_rule,cc_o_c)
+$(obj)/relo_core.bc: $(srctree)/tools/lib/bpf/relo_core.c FORCE
+	$(call if_changed_rule,cc_bc_c)
diff --git a/lib/Makefile b/lib/Makefile
index 740109b6e2c8..6484c7fecb55 100644
--- a/lib/Makefile
+++ b/lib/Makefile
@@ -301,6 +301,7 @@ obj-$(CONFIG_BOOT_CONFIG) += bootconfig.o
 obj-$(CONFIG_BOOT_CONFIG_EMBED) += bootconfig-data.o
 
 $(obj)/bootconfig-data.o: $(obj)/default.bconf
+$(obj)/bootconfig-data.bc: $(obj)/default.bconf
 
 targets += default.bconf
 filechk_defbconf = cat $(or $(real-prereqs), /dev/null)
@@ -323,6 +324,7 @@ clean-files	:= crc32table.h
 clean-files	+= crc64table.h
 
 $(obj)/crc32.o: $(obj)/crc32table.h
+$(obj)/crc32.bc: $(obj)/crc32table.h
 
 quiet_cmd_crc32 = GEN     $@
       cmd_crc32 = $< > $@
@@ -331,6 +333,7 @@ $(obj)/crc32table.h: $(obj)/gen_crc32table
 	$(call cmd,crc32)
 
 $(obj)/crc64.o: $(obj)/crc64table.h
+$(obj)/crc64.bc: $(obj)/crc64table.h
 
 quiet_cmd_crc64 = GEN     $@
       cmd_crc64 = $< > $@
@@ -344,6 +347,7 @@ $(obj)/crc64table.h: $(obj)/gen_crc64table
 obj-$(CONFIG_OID_REGISTRY) += oid_registry.o
 
 $(obj)/oid_registry.o: $(obj)/oid_registry_data.c
+$(obj)/oid_registry.bc: $(obj)/oid_registry_data.c
 
 $(obj)/oid_registry_data.c: $(srctree)/include/linux/oid_registry.h \
 			    $(src)/build_OID_registry
diff --git a/scripts/Makefile.build b/scripts/Makefile.build
index 82e3fb19fdaf..e3fba0971aab 100644
--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -69,7 +69,11 @@ endif
 # ===========================================================================
 
 # subdir-builtin and subdir-modorder may contain duplications. Use $(sort ...)
+ifeq ($(BUILD_BC),1)
+subdir-builtin := $(sort $(filter %/built-in.bc, $(real-obj-y)))
+else
 subdir-builtin := $(sort $(filter %/built-in.a, $(real-obj-y)))
+endif
 subdir-modorder := $(sort $(filter %/modules.order, $(obj-m)))
 
 targets-for-builtin := $(extra-y)
@@ -82,6 +86,10 @@ ifdef need-builtin
 targets-for-builtin += $(obj)/built-in.a
 endif
 
+ifeq ($(BUILD_BC),1)
+targets-for-builtin := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(targets-for-builtin)))
+endif
+
 targets-for-modules := $(foreach x, o mod, \
 				$(patsubst %.o, %.$x, $(filter %.o, $(obj-m))))
 
@@ -160,6 +168,11 @@ quiet_cmd_cc_o_c = CC $(quiet_modtag)  $@
 		$(cmd_ld_single_m) \
 		$(cmd_objtool)
 
+quiet_cmd_cc_bc_c = CC $(quiet_modtag)  $@
+      cmd_cc_bc_c = $(CC) $(c_flags) -emit-llvm -c -o $@ $< \
+		$(cmd_ld_single_m) \
+		$(cmd_objtool)
+
 ifdef CONFIG_MODVERSIONS
 # When module versioning is enabled the following steps are executed:
 # o compile a <file>.o from <file>.c
@@ -216,6 +229,7 @@ endif # CONFIG_FTRACE_MCOUNT_USE_RECORDMCOUNT
 is-standard-object = $(if $(filter-out y%, $(OBJECT_FILES_NON_STANDARD_$(basetarget).o)$(OBJECT_FILES_NON_STANDARD)n),y)
 
 $(obj)/%.o: objtool-enabled = $(if $(is-standard-object),$(if $(delay-objtool),$(is-single-obj-m),y))
+$(obj)/%.bc: objtool-enabled = $(if $(is-standard-object),$(if $(delay-objtool),$(is-single-obj-m),y))
 
 ifneq ($(findstring 1, $(KBUILD_EXTRA_WARN)),)
 cmd_warn_shared_object = $(if $(word 2, $(modname-multi)),$(warning $(kbuild-file): $*.o is added to multiple modules: $(modname-multi)))
@@ -231,6 +245,14 @@ define rule_cc_o_c
 	$(call cmd,warn_shared_object)
 endef
 
+define rule_cc_bc_c
+	$(call cmd_and_fixdep,cc_bc_c)
+	$(call cmd,checksrc)
+	$(call cmd,checkdoc)
+	$(call cmd,gen_objtooldep)
+	$(call cmd,warn_shared_object)
+endef
+
 define rule_as_o_S
 	$(call cmd_and_fixdep,as_o_S)
 	$(call cmd,gen_objtooldep)
@@ -243,6 +265,10 @@ $(obj)/%.o: $(src)/%.c $(recordmcount_source) FORCE
 	$(call if_changed_rule,cc_o_c)
 	$(call cmd,force_checksrc)
 
+$(obj)/%.bc: $(src)/%.c $(recordmcount_source) FORCE
+	$(call if_changed_rule,cc_bc_c)
+	$(call cmd,force_checksrc)
+
 # To make this rule robust against "Argument list too long" error,
 # ensure to add $(obj)/ prefix by a shell command.
 cmd_mod = printf '%s\n' $(call real-search, $*.o, .o, -objs -y -m) | \
@@ -347,6 +373,10 @@ $(obj)/%.s: $(src)/%.S FORCE
 quiet_cmd_as_o_S = AS $(quiet_modtag)  $@
       cmd_as_o_S = $(CC) $(a_flags) -c -o $@ $< $(cmd_objtool)
 
+# Abandon .S files.
+quiet_cmd_as_bc_S = AS $(quiet_modtag)  $@
+      cmd_as_bc_S = echo "" > $@
+
 ifdef CONFIG_ASM_MODVERSIONS
 
 # versioning matches the C process described above, with difference that
@@ -359,6 +389,9 @@ endif
 $(obj)/%.o: $(src)/%.S FORCE
 	$(call if_changed_rule,as_o_S)
 
+$(obj)/%.bc: $(src)/%.S FORCE
+	$(call if_changed,as_bc_S)
+
 targets += $(filter-out $(subdir-builtin), $(real-obj-y))
 targets += $(filter-out $(subdir-modorder), $(real-obj-m))
 targets += $(real-dtb-y) $(lib-y) $(always-y)
@@ -385,7 +418,11 @@ $(obj)/%.asn1.c $(obj)/%.asn1.h: $(src)/%.asn1 $(objtree)/scripts/asn1_compiler
 # ---------------------------------------------------------------------------
 
 # To build objects in subdirs, we need to descend into the directories
+ifeq ($(BUILD_BC),1)
+$(subdir-builtin): $(obj)/%/built-in.bc: $(obj)/% ;
+else
 $(subdir-builtin): $(obj)/%/built-in.a: $(obj)/% ;
+endif
 $(subdir-modorder): $(obj)/%/modules.order: $(obj)/% ;
 
 #
@@ -402,6 +439,13 @@ quiet_cmd_ar_builtin = AR      $@
 $(obj)/built-in.a: $(real-obj-y) FORCE
 	$(call if_changed,ar_builtin)
 
+quiet_cmd_link_builtin = LINK    $@
+      cmd_link_builtin = rm -f $@; \
+	$(if $(real-prereqs), printf "$(obj)/%s " $(patsubst $(obj)/%,%,$(real-prereqs)) | xargs $(LLVMLINK) -o $@, echo "" > $@)
+
+$(obj)/built-in.bc: $(real-obj-y) FORCE
+	$(call if_changed,link_builtin)
+
 #
 # Rule to create modules.order file
 #
@@ -424,19 +468,36 @@ $(obj)/modules.order: $(obj-m) FORCE
 $(obj)/lib.a: $(lib-y) FORCE
 	$(call if_changed,ar)
 
+$(obj)/lib.bc: $(lib-y) FORCE
+	$(call if_changed,link)
+
 quiet_cmd_ld_multi_m = LD [M]  $@
       cmd_ld_multi_m = $(LD) $(ld_flags) -r -o $@ @$(patsubst %.o,%.mod,$@) $(cmd_objtool)
 
+quiet_cmd_link_multi_m = LINK [M] $@
+      cmd_link_multi_m = $(LLVMLINK) -o $@ @$(patsubst %.bc,%.mod,$@) $(cmd_objtool)
+
 define rule_ld_multi_m
 	$(call cmd_and_savecmd,ld_multi_m)
 	$(call cmd,gen_objtooldep)
 endef
 
+define rule_link_multi_m
+	$(call cmd_and_savecmd,link_multi_m)
+	$(call cmd,gen_objtooldep)
+endef
+
 $(multi-obj-m): objtool-enabled := $(delay-objtool)
 $(multi-obj-m): part-of-module := y
+ifeq ($(BUILD_BC),1)
+$(multi-obj-m): %.bc: %.mod FORCE
+	$(call if_changed_rule,link)
+$(call multi_depend, $(multi-obj-m), .bc, -objs -y -m)
+else
 $(multi-obj-m): %.o: %.mod FORCE
 	$(call if_changed_rule,ld_multi_m)
 $(call multi_depend, $(multi-obj-m), .o, -objs -y -m)
+endif
 
 # Add intermediate targets:
 # When building objects with specific suffix patterns, add intermediate
@@ -478,7 +539,7 @@ $(single-subdir-goals): $(single-subdirs)
 PHONY += $(subdir-ym)
 $(subdir-ym):
 	$(Q)$(MAKE) $(build)=$@ \
-	need-builtin=$(if $(filter $@/built-in.a, $(subdir-builtin)),1) \
+	need-builtin=$(if $(filter $@/built-in.%, $(subdir-builtin)),1) \
 	need-modorder=$(if $(filter $@/modules.order, $(subdir-modorder)),1) \
 	$(filter $@/%, $(single-subdir-goals))
 
@@ -491,6 +552,9 @@ FORCE:
 
 targets += $(filter-out $(single-subdir-goals), $(MAKECMDGOALS))
 targets := $(filter-out $(PHONY), $(targets))
+ifeq ($(BUILD_BC),1)
+targets := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(targets)))
+endif
 
 # Read all saved command lines and dependencies for the $(targets) we
 # may be building above, using $(if_changed{,_dep}). As an
diff --git a/scripts/Makefile.lib b/scripts/Makefile.lib
index 68d0134bdbf9..db7cc685166d 100644
--- a/scripts/Makefile.lib
+++ b/scripts/Makefile.lib
@@ -104,6 +104,22 @@ real-dtb-y	:= $(addprefix $(obj)/, $(real-dtb-y))
 subdir-ym	:= $(addprefix $(obj)/,$(subdir-ym))
 endif
 
+ifeq ($(BUILD_BC),1)
+extra-y := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(extra-y)))
+always-y := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(always-y)))
+targets := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(targets)))
+obj-m := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(obj-m)))
+obj-y := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(obj-y)))
+lib-y := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(lib-y)))
+real-obj-y := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(real-obj-y)))
+real-obj-m := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(real-obj-m)))
+multi-obj-y	:= $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(multi-obj-y)))
+multi-obj-m	:= $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(multi-obj-m)))
+multi-dtb-y	:= $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(multi-dtb-y)))
+real-dtb-y	:= $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(real-dtb-y)))
+subdir-ym := $(patsubst %.a,%.bc,$(patsubst %.o,%.bc,$(subdir-ym)))
+endif
+
 # Finds the multi-part object the current object will be linked into.
 # If the object belongs to two or more multi-part objects, list them all.
 modname-multi = $(sort $(foreach m,$(multi-obj-ym),\
@@ -325,11 +341,17 @@ quiet_cmd_ld = LD      $@
 quiet_cmd_ar = AR      $@
       cmd_ar = rm -f $@; $(AR) cDPrsT $@ $(real-prereqs)
 
+quiet_cmd_link = LINK    $@
+      cmd_link = rm -f $@; \
+      $(if $(real-prereqs), $(LLVMLINK) -o $@ $(real-prereqs), echo "" > $(@))
+
 # Objcopy
 # ---------------------------------------------------------------------------
 
 quiet_cmd_objcopy = OBJCOPY $@
 cmd_objcopy = $(OBJCOPY) $(OBJCOPYFLAGS) $(OBJCOPYFLAGS_$(@F)) $< $@
+quiet_cmd_objcopy_bc = LLVMCOPY $@
+cmd_objcopy_bc = cp $< $@
 
 # Gzip
 # ---------------------------------------------------------------------------
diff --git a/scripts/Makefile.modfinal b/scripts/Makefile.modfinal
index b3a6aa8fbe8c..87c78056fbab 100644
--- a/scripts/Makefile.modfinal
+++ b/scripts/Makefile.modfinal
@@ -25,6 +25,9 @@ part-of-module = y
 quiet_cmd_cc_o_c = CC [M]  $@
       cmd_cc_o_c = $(CC) $(filter-out $(CC_FLAGS_CFI) $(CFLAGS_GCOV), $(c_flags)) -c -o $@ $<
 
+quiet_cmd_cc_bc_c = CC [M]  $@
+      cmd_cc_bc_c = $(CC) $(filter-out $(CC_FLAGS_CFI) $(CFLAGS_GCOV), $(c_flags)) -emit-llvm -c -o $@ $<
+
 %.mod.o: %.mod.c FORCE
 	$(call if_changed_dep,cc_o_c)
 
diff --git a/scripts/Makefile.vmlinux b/scripts/Makefile.vmlinux
index 3cd6ca15f390..46b4aefea1f5 100644
--- a/scripts/Makefile.vmlinux
+++ b/scripts/Makefile.vmlinux
@@ -17,6 +17,12 @@ quiet_cmd_cc_o_c = CC      $@
 %.o: %.c FORCE
 	$(call if_changed_dep,cc_o_c)
 
+quiet_cmd_cc_bc_c = CC      $@
+      cmd_cc_bc_c = $(CC) $(c_flags) -c -emit-llvm -o $@ $<
+
+%.bc: %.c FORCE
+	$(call if_changed_dep,cc_bc_c)
+
 ifdef CONFIG_MODULES
 KASAN_SANITIZE_.vmlinux.export.o := n
 GCOV_PROFILE_.vmlinux.export.o := n
diff --git a/scripts/genksyms/Makefile b/scripts/genksyms/Makefile
index d6a422a63b6a..eb0b7e6ca774 100644
--- a/scripts/genksyms/Makefile
+++ b/scripts/genksyms/Makefile
@@ -28,3 +28,4 @@ HOSTCFLAGS_lex.lex.o := -I $(srctree)/$(src)
 
 # dependencies on generated files need to be listed explicitly
 $(obj)/lex.lex.o: $(obj)/parse.tab.h
+$(obj)/lex.lex.bc: $(obj)/parse.tab.h
diff --git a/security/apparmor/Makefile b/security/apparmor/Makefile
index b9c5879dd599..1bfb8a17b265 100644
--- a/security/apparmor/Makefile
+++ b/security/apparmor/Makefile
@@ -101,6 +101,9 @@ cmd_make-rlim = echo "static const char *const rlim_names[RLIM_NLIMITS] = {" \
 $(obj)/capability.o : $(obj)/capability_names.h
 $(obj)/net.o : $(obj)/net_names.h
 $(obj)/resource.o : $(obj)/rlim_names.h
+$(obj)/capability.bc : $(obj)/capability_names.h
+$(obj)/net.bc : $(obj)/net_names.h
+$(obj)/resource.bc : $(obj)/rlim_names.h
 $(obj)/capability_names.h : $(srctree)/include/uapi/linux/capability.h \
 			    $(src)/Makefile
 	$(call cmd,make-caps)
diff --git a/security/keys/trusted-keys/Makefile b/security/keys/trusted-keys/Makefile
index 735aa0bc08ef..2202b1d4be76 100644
--- a/security/keys/trusted-keys/Makefile
+++ b/security/keys/trusted-keys/Makefile
@@ -8,6 +8,7 @@ trusted-y += trusted_core.o
 trusted-$(CONFIG_TRUSTED_KEYS_TPM) += trusted_tpm1.o
 
 $(obj)/trusted_tpm2.o: $(obj)/tpm2key.asn1.h
+$(obj)/trusted_tpm2.bc: $(obj)/tpm2key.asn1.h
 trusted-$(CONFIG_TRUSTED_KEYS_TPM) += trusted_tpm2.o
 trusted-$(CONFIG_TRUSTED_KEYS_TPM) += tpm2key.asn1.o
 
diff --git a/security/selinux/Makefile b/security/selinux/Makefile
index 836379639058..87c90508ca65 100644
--- a/security/selinux/Makefile
+++ b/security/selinux/Makefile
@@ -26,7 +26,11 @@ genhdrs := flask.h av_permissions.h
 
 # see the note above, replace the dependency rule with the one below:
 #  $(addprefix $(obj)/,$(selinux-y)): $(addprefix $(obj)/,$(genhdrs))
+ifeq ($(BUILD_BC),1)
+$(patsubst %.o,%.bc,$(addprefix $(obj)/,$(selinux-y))): $(obj)/flask.h
+else
 $(addprefix $(obj)/,$(selinux-y)): $(obj)/flask.h
+endif
 
 quiet_cmd_genhdrs = GEN     $(addprefix $(obj)/,$(genhdrs))
       cmd_genhdrs = $< $(addprefix $(obj)/,$(genhdrs))
diff --git a/security/tomoyo/Makefile b/security/tomoyo/Makefile
index 884ff155edc3..f2fcacd8e21d 100644
--- a/security/tomoyo/Makefile
+++ b/security/tomoyo/Makefile
@@ -16,4 +16,5 @@ $(obj)/builtin-policy.h: $(wildcard $(obj)/policy/*.conf $(srctree)/$(src)/polic
 
 ifndef CONFIG_SECURITY_TOMOYO_INSECURE_BUILTIN_SETTING
 $(obj)/common.o: $(obj)/builtin-policy.h
+$(obj)/common.bc: $(obj)/builtin-policy.h
 endif
